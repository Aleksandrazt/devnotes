"""init tables

Revision ID: 2a84ac416690
Revises:
Create Date: 2025-05-24 09:56:17.541738

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2a84ac416690"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tags",
        sa.Column("id_", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id_"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_tags_id_"), "tags", ["id_"], unique=False)
    op.create_table(
        "users",
        sa.Column("id_", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id_"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_users_id_"), "users", ["id_"], unique=False)
    op.create_table(
        "notes",
        sa.Column("id_", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("content", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.Column("tag_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["author_id"], ["users.id_"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tag_id"], ["tags.id_"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id_"),
    )
    op.create_index(op.f("ix_notes_id_"), "notes", ["id_"], unique=False)
    op.create_index(op.f("ix_notes_title"), "notes", ["title"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_notes_title"), table_name="notes")
    op.drop_index(op.f("ix_notes_id_"), table_name="notes")
    op.drop_table("notes")
    op.drop_index(op.f("ix_users_id_"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_tags_id_"), table_name="tags")
    op.drop_table("tags")
    # ### end Alembic commands ###
